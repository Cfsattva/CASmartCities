syntax = "proto3";
package trafficlight;

// Traffic Light Service definition

service TrafficLightService {
  // Get the current status of a specific traffic light
  rpc GetLightStatus (LightRequest) returns (LightStatus);
  
  // Change the timing parameters of a traffic light
  rpc ChangeLightTiming (TimingRequest) returns (OperationResponse);
  
  // Monitor traffic flow at an intersection (server streaming)
  rpc MonitorTrafficFlow (IntersectionRequest) returns (stream TrafficUpdate);
}

// Request message for getting light status
message LightRequest {
  string light_id = 1;  // Unique identifier for the traffic light
}

// Response message with traffic light status
message LightStatus {
  string light_id = 1;          // Echo of the requested light ID
  string current_color = 2;     // Current signal color ("red", "yellow", "green")
  int32 seconds_remaining = 3;  // Time until next state change
}

// Request message for changing light timing
message TimingRequest {
  string light_id = 1;        // Identifier for the target traffic light
  int32 green_duration = 2;   // Duration in seconds for the green light
  int32 yellow_duration = 3;  // Duration in seconds for the yellow light
  int32 red_duration = 4;     // Duration in seconds for the red light
}

// Generic operation response
message OperationResponse {
  bool success = 1;      // Whether the operation succeeded
  string message = 2;    // Description of the result
}

// Request message for monitoring an intersection
message IntersectionRequest {
  string intersection_id = 1;  // Unique identifier for the intersection
}

// Traffic update message (for streaming)
message TrafficUpdate {
  string intersection_id = 1;   // Intersection identifier
  int32 vehicle_count = 2;      // Number of vehicles currently detected
  float congestion_level = 3;   // Measure of congestion (0.0 to 1.0)
  string timestamp = 4;         // Time when the data was captured
}