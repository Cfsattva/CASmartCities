syntax = "proto3";
package parking;

// Parking Service definition
service ParkingService {
  // Get available parking spaces in a lot
  rpc GetAvailableSpaces (ParkingLotRequest) returns (AvailabilityResponse);
  
  // Reserve a parking space
  rpc ReserveSpace (ReservationRequest) returns (ReservationResponse);
  
  // Monitor changes in parking availability (server streaming)
  rpc MonitorParkingChanges (ParkingLotRequest) returns (stream ParkingUpdate);
}

// Request message for getting parking availability
message ParkingLotRequest {
  string parking_lot_id = 1;  // Identifier for the parking facility
}

// Response message with availability information
message AvailabilityResponse {
  string parking_lot_id = 1;             // Echo of the requested lot ID
  int32 total_spaces = 2;                // Total number of spaces in the lot
  int32 available_spaces = 3;            // Number of currently available spaces
  repeated ParkingSpace spaces = 4;      // Details about individual spaces
}

// Information about a specific parking space
message ParkingSpace {
  string space_id = 1;       // Identifier for the parking space
  bool is_available = 2;     // Whether the space is currently available
  string vehicle_type = 3;   // Type of vehicle the space is designed for ("standard", "handicap", "electric")
}

// Request message for reserving a space
message ReservationRequest {
  string parking_lot_id = 1;     // Target parking facility
  string space_id = 2;           // Specific space to reserve (if known)
  string vehicle_id = 3;         // Identifier for the requesting vehicle
  int32 duration_minutes = 4;    // Requested reservation duration
}

// Response message for reservation requests
message ReservationResponse {
  bool success = 1;           // Whether the reservation was successful
  string reservation_id = 2;  // Unique identifier for the reservation
  string message = 3;         // Descriptive result message
}

// Parking update message (for streaming)
message ParkingUpdate {
  string parking_lot_id = 1;     // Facility identifier
  int32 available_spaces = 2;    // Current available space count
  string timestamp = 3;          // Time of the update
}