syntax = "proto3";
package parking;

service ParkingService {
  // Unary RPC
  rpc GetAvailableSpaces (ParkingLotRequest) returns (AvailabilityResponse);
  
  // Unary RPC
  rpc ReserveSpace (ReservationRequest) returns (ReservationResponse);
  
  // Server streaming RPC
  rpc MonitorParkingChanges (ParkingLotRequest) returns (stream ParkingUpdate);
}

message ParkingLotRequest {
  string parking_lot_id = 1;
}

message AvailabilityResponse {
  string parking_lot_id = 1;
  int32 total_spaces = 2;
  int32 available_spaces = 3;
  repeated ParkingSpace spaces = 4;
}

message ParkingSpace {
  string space_id = 1;
  bool is_available = 2;
  string vehicle_type = 3;  // "standard", "handicap", "electric"
}

message ReservationRequest {
  string parking_lot_id = 1;
  string space_id = 2;
  string vehicle_id = 3;
  int32 duration_minutes = 4;
}

message ReservationResponse {
  bool success = 1;
  string reservation_id = 2;
  string message = 3;
}

message ParkingUpdate {
  string parking_lot_id = 1;
  int32 available_spaces = 2;
  string timestamp = 3;
}